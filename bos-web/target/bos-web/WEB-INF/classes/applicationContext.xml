<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 导入外部数据源配置文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!-- 配置数据源 -->
    <bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
        <property name="user" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <!-- 配置 LocalSessionFactoryBean ,Spring 提供的用于整合 hibernate 框架的工厂bean -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 注入 hibernate 的相关属性配置 -->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
            </props>
        </property>
        <!--  注入 hibernate 的映射文件 -->
        <property name="mappingLocations">
            <list>
                <value>classpath:com/itheima/bos/entity/*.xml</value>
            </list>
        </property>
    </bean>
    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- 配置 filterProxy 过滤器工厂bean -->
    <bean id="filterProxy" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- 注入安全管理器对象 -->
        <property name="securityManager" ref="securityManager"></property>
        <!-- 注入相关页面的url -->
        <property name="loginUrl" value="/login.jsp"></property>
        <property name="successUrl" value="/index.jsp"></property>
        <property name="unauthorizedUrl" value="/unauthorized.jsp"></property>
        <!--
            注入 URL 拦截规则
        -->
        <property name="filterChainDefinitions">
            <value>
                /css/** = anon
                /images/** = anon
                /js/** = anon
                /json/** = anon
                /validatecode.jsp* = anon
                /login.jsp = anon
                /userAction_login.action = anon
                /page_base_staff.action = perms["staff-list"]
                /* = authc
            </value>
        </property>
    </bean>
    <!-- 配置安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="BOSRealm"></property>
        <!-- 注入缓存管理器 -->
        <property name="cacheManager" ref="cacheManager"></property>
    </bean>

    <!-- 注册缓存管理器 -->
    <bean class="org.apache.shiro.cache.ehcache.EhCacheManager" id="cacheManager">
        <!-- 注入 ehcache 的配置文件 -->
        <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"></property>
    </bean>
    <!-- 配置 realm  -->
    <bean id="BOSRealm" class="com.itheima.bos.service.realm.BOSRealm">
        <property name="authorizationCachingEnabled" value="false"></property>
    </bean>
    <!-- 开启 shiro 注解支持 -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" id="advisorAutoProxyCreator">
        <!-- 必须使用 cglib 方式为 action 对象创建代理对象-->
        <property name="proxyTargetClass" value="true"/>
    </bean>
    <!--  配置 shiro 框架提供的切面类，用于创建代理对象 -->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"></bean>
    <!-- 注册自定义作业类 -->
    <bean class="com.itheima.job.MailJob" id="mailJob">
        <property name="username" value="itcast_server@126.com"/>
        <property name="password" value="147963qP"/>
        <property name="smtpServer" value="smtp.126.com"/>
    </bean>
    <!-- 配置 JobDetail -->
    <bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean" id="jobDetail">
        <!-- 注入目标对象 -->
        <property name="targetObject" ref="mailJob"/>
        <!-- 注入目标方法 -->
        <property name="targetMethod" value="execute"/>
    </bean>
    <!-- 配置触发器 -->
    <bean class="org.springframework.scheduling.quartz.CronTriggerFactoryBean" id="cronTrigger">
        <property name="jobDetail" ref="jobDetail"/>
        <property name="cronExpression" value="0/10 * 12 * * ?"/>
    </bean>
    <!-- 配置调度工厂 -->
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean" id="scheduler">
        <property name="triggers">
            <list>
                <ref bean="cronTrigger"/>
            </list>
        </property>
    </bean>
    <!-- 组件扫描 -->
    <context:component-scan base-package="com.itheima.bos"/>
    <!-- 支持 spring 注解 -->
    <context:annotation-config></context:annotation-config>
    <!-- 开启注解事务 -->
    <tx:annotation-driven/>
</beans>